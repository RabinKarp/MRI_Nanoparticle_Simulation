/**
 * @author  Vivek Bharadwaj
 * @date    18 September 2017.
 * @file    T2_GPU_sim.cu 
 * @brief   Contains a function to set the naming convention of the output
 *          files generated by the diffusion simulation, and the main
 *          function that generates the filename and runs the simulation.
 */
#include <cstdio>
#include <iostream>
#include <fstream>
#include <ctime>
#include <string>
#include <random>

#include "cuda.h"

#include "parameters.h"
#include "cuda_sim.h"
#include "FCCBox.h"

using namespace std;

/*
 * Generates a detailed filename for an output file, containing information
 * about the parameters used to generate it.
 *
 * @return filename The filename of the csv used to store the simulation output
 */

std::string generate_base_filename()
{
    std::string filename("echo_");
    filename += "T-e";
    filename += std::to_string((unsigned)(2*p.taucp));
    filename += "_clusterradius_";
    filename += std::to_string((double)(p.mnp_radius));
    filename += "_mmoment_";
    filename += std::to_string((double)(p.mmoment));
    filename += "_numclusters_";
    filename += std::to_string((int)(p.num_mnps));
    filename += "_cellcount_";
    filename += std::to_string((int)(p.num_cells));
    filename += "_boundarymicrons_";
    filename += std::to_string((double)(p.bound));
    filename += "_";
#ifdef EXPLICIT
    filename += "_ex_";
#endif

#ifndef FULL_BOUNDARIES
    filename += "_border=";
    filename += std::to_string((unsigned)(p.border));
    filename += "um_";
#endif
    filename += std::to_string((unsigned)(time(NULL)));
    filename += ".csv";
    return filename;
}

/**
 * Generates the name of the simulation output and runs the diffusion
 * simulation.
 *
 * @param argc  The number of command line arguments (0)
 * @param argv  An array of strings, the command line arguments
 */
int main(int argc, char** argv) {
    std::string fName = generate_base_filename();
    simulateWaters(fName);
}
